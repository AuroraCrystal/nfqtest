{"version":3,"sources":["components/SearchBar.js","components/AddModal.js","components/SearchResults.js","components/SearchComponent.js","components/VideoComponent.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","searchMedia","react_default","a","createElement","Form_default","Control","type","placeholder","onChange","style","width","save","data","localStorage","setItem","JSON","stringify","AddModal","item","list","open","handleClose","toggleNo","purpose","Modal","show","onHide","Header","closeButton","Title","Body","es_Form","Group","controlId","Label","defaultValue","title","e","target","value","Text","className","as","rows","resize","description","preview","concat","nasa_id","link","Footer","Button","variant","onClick","linkId","changeState","favorite","push","addData","window","location","reload","id","_findIndex","editData","SearchResults","state","toggleModal","Array","_this","searchResults","fill","createTable","arrangedTable","count","i","Math","round","length","tableRow","j","Object","objectSpread","showModal","modArr","setState","hideModal","_this2","this","resList","map","o","key","alt","src","height","cols","disabled","Button_default","components_AddModal","itemList","React","Component","SearchComponent","term","url","axios","method","then","response","res","collection","items","forEach","media_type","_find","links","rel","href","catch","error","components_SearchBar","components_SearchResults","VideoComponent","goToMedia","mediaLink","resArr","includes","deleteData","dataIndex","splice","forceUpdate","table","display","getItems","parse","getItem","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showAddScreen","showHideAddScreen","components_SearchComponent","components_VideoComponent","keyword","Container","Row","Col","textAlign","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mTAceA,EAXG,SAACC,GAAU,IACjBC,EAAgBD,EAAhBC,YACR,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACCD,EAAAC,EAAAC,cAACC,EAAAF,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,0BAA0BC,SAAUR,EAAaS,MAAO,CAACC,MAAQ,wDCFhH,SAASC,EAAKC,GACVC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,IAgBhD,IA0FeK,EA1FE,SAAClB,GAAU,IAChBmB,EAAqDnB,EAArDmB,KAAMC,EAA+CpB,EAA/CoB,KAAMC,EAAyCrB,EAAzCqB,KAAMC,EAAmCtB,EAAnCsB,YAAaC,EAAsBvB,EAAtBuB,SAEvC,MAAgB,QAF6CvB,EAAZwB,QAIzCtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOC,KAAML,EAAMM,OAAQ,WAAOL,EAAYC,KAC5CrB,EAAAC,EAAAC,cAACqB,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB3B,EAAAC,EAAAC,cAACqB,EAAA,EAAMK,MAAP,sBAEF5B,EAAAC,EAAAC,cAACqB,EAAA,EAAMM,KAAP,KACE7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,KACI9B,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAClBhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,MAAN,cACAjC,EAAAC,EAAAC,cAAC4B,EAAA,EAAK1B,QAAN,CAAcC,KAAK,OAAOC,YAAY,iBAAiB4B,aAAcjB,EAAKkB,MAAQ5B,SAAU,SAAC6B,GAAQnB,EAAKkB,MAAQC,EAAEC,OAAOC,SAC3HtC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKS,KAAN,CAAWC,UAAU,cAArB,qDAIJxC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,YAClBhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,MAAN,oBACAjC,EAAAC,EAAAC,cAAC4B,EAAA,EAAK1B,QAAN,CAAcqC,GAAG,WAAWC,KAAK,IAAIlC,MAAO,CAACmC,OAAQ,QAASrC,YAAY,uBAAuB4B,aAAcjB,EAAK2B,YAAcrC,SAAU,SAAC6B,GAAQnB,EAAK2B,YAAcR,EAAEC,OAAOC,SACjLtC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKS,KAAN,CAAWC,UAAU,cAArB,4BAIJxC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,mBAClBhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,MAAN,2BACAjC,EAAAC,EAAAC,cAAC4B,EAAA,EAAK1B,QAAN,CAAcC,KAAK,OAAOC,YAAY,gBAAgB4B,aAAcjB,EAAK4B,QAAUtC,SAAU,SAAC6B,GAAQnB,EAAK4B,QAAUT,EAAEC,OAAOC,UAElItC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClBhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,MAAN,mBACAjC,EAAAC,EAAAC,cAAC4B,EAAA,EAAK1B,QAAN,CAAcC,KAAK,OAAOC,YAAY,gBAAgB4B,aAAY,qCAAAY,OAAuC7B,EAAK8B,SAAYxC,SAAU,SAAC6B,GAAQnB,EAAK+B,KAAOZ,EAAEC,OAAOC,YAI5KtC,EAAAC,EAAAC,cAACqB,EAAA,EAAM0B,OAAP,KACEjD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WAAOhC,EAAYC,KAAxD,SAGArB,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,YApDnD,SAAiBnC,EAAMN,EAAM0C,EAAQC,GACjCrC,EAAK+B,KAAL,qCAAAF,OAAiDO,GACjDpC,EAAKsC,UAAW,EAChB5C,EAAK6C,KAAKvC,GACVP,EAAKC,GAgDiD8C,CAAQxC,EAAMC,EAAMD,EAAK8B,SAAU3B,EAAYC,GAAWqC,OAAOC,SAASC,WAApH,mBAQJ5D,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOC,KAAML,EAAMM,OAAQ,WAAOL,EAAYC,KAC5CrB,EAAAC,EAAAC,cAACqB,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB3B,EAAAC,EAAAC,cAACqB,EAAA,EAAMK,MAAP,mBAEF5B,EAAAC,EAAAC,cAACqB,EAAA,EAAMM,KAAP,KACE7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,KACI9B,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAClBhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,MAAN,cACAjC,EAAAC,EAAAC,cAAC4B,EAAA,EAAK1B,QAAN,CAAcC,KAAK,OAAOC,YAAY,iBAAiB4B,aAAcjB,EAAKkB,MAAQ5B,SAAU,SAAC6B,GAAQnB,EAAKkB,MAAQC,EAAEC,OAAOC,SAC3HtC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKS,KAAN,CAAWC,UAAU,cAArB,qDAIJxC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,YAClBhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,MAAN,oBACAjC,EAAAC,EAAAC,cAAC4B,EAAA,EAAK1B,QAAN,CAAcqC,GAAG,WAAWC,KAAK,IAAIlC,MAAO,CAACmC,OAAQ,QAASrC,YAAY,uBAAuB4B,aAAcjB,EAAK2B,YAAarC,SAAU,SAAC6B,GAAQnB,EAAK2B,YAAcR,EAAEC,OAAOC,SAChLtC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKS,KAAN,CAAWC,UAAU,cAArB,4BAIJxC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,mBAClBhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,MAAN,2BACAjC,EAAAC,EAAAC,cAAC4B,EAAA,EAAK1B,QAAN,CAAcC,KAAK,OAAOC,YAAY,gBAAgB4B,aAAcjB,EAAK4B,QAAStC,SAAU,SAAC6B,GAAQnB,EAAK4B,QAAUT,EAAEC,OAAOC,UAEjItC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClBhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,MAAN,mBACAjC,EAAAC,EAAAC,cAAC4B,EAAA,EAAK1B,QAAN,CAAcC,KAAK,OAAOC,YAAY,gBAAgB4B,aAAcjB,EAAK+B,KAAMzC,SAAU,SAAC6B,GAAQnB,EAAK+B,KAAOZ,EAAEC,OAAOC,YAIjItC,EAAAC,EAAAC,cAACqB,EAAA,EAAM0B,OAAP,KACEjD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WAAOhC,EAAYC,KAAxD,SAGArB,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,YAvFnD,SAAkBS,EAAI5C,EAAMN,GAExBA,EADgBmD,IAAWnD,EAAM,CAACkD,GAAOA,KACvB5C,EAClBP,EAAKC,GAoFiDoD,CAAS9C,EAAK4C,GAAI5C,EAAMC,GAAOE,EAAYC,KAArF,iCCzBD2C,oNAvEXC,MAAQ,CACJC,YAAa,IAAIC,MAAMC,EAAKtE,MAAMuE,eAAeC,MAAK,MAG1DC,YAAc,SAAC5D,GAGX,IAFA,IAAI6D,EAAgB,GAChBC,EAAQ,EACHC,EAAI,EAAGA,EAAKC,KAAKC,MAAMjE,EAAKkE,OAAS,GAAMlE,EAAKkE,OAAS,EAAKH,GAAK,EAAG,CAG3E,IADA,IAAII,EAAW,GACNC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACrBpE,EAAK8D,KACJK,EAAStB,KAATwB,OAAAC,EAAA,EAAAD,CAAA,GACOrE,EAAK8D,KAEZA,GAAS,GAGjBD,EAAchB,KAAKsB,GAEvB,OAAON,KAGXU,UAAY,SAACrB,GACT,IAAMsB,EAASf,EAAKH,MAAMC,YAC1BiB,EAAOtB,IAAM,EACbO,EAAKgB,SAAS,CACVlB,YAAaiB,OAIrBE,UAAY,SAACxB,GACT,IAAMsB,EAASf,EAAKH,MAAMC,YAC1BiB,EAAOtB,IAAM,EACbO,EAAKgB,SAAS,CACVlB,YAAaiB,6EAIZ,IAAAG,EAAAC,KACCC,EAAUD,KAAKhB,YAAYgB,KAAKzF,MAAMuE,eAAeoB,IAAI,SAAAxE,GAC3D,OACIjB,EAAAC,EAAAC,cAAA,UAEQe,EAAKwE,IAAI,SAAAC,GACL,OACI1F,EAAAC,EAAAC,cAAA,MAAIyF,IAAMD,EAAE7B,GAAKrB,UAAU,eACvBxC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAK0F,IAAI,YAAYC,IAAMH,EAAE7C,QAAUpC,MAAM,MAAMqF,OAAO,SAC/D9F,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,mBAAYwF,EAAEvD,SACzBnC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,YAAUwC,KAAK,IAAIqD,KAAK,KAAKzD,MAAQoD,EAAE9C,YAAcoD,UAAQ,KAClEhG,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAD,CAAQkD,QAAQ,UAAUC,QAAS,WAAOkC,EAAKJ,UAAUQ,EAAE7B,MAA3D,iBACL7D,EAAAC,EAAAC,cAACgG,EAAD,CAAUjF,KAAMyE,EAAGxE,KAAMoE,EAAKxF,MAAMqG,SAAUhF,KAAMmE,EAAKrB,MAAMC,YAAYwB,EAAE7B,IAAKzC,YAAakE,EAAKD,UAAWhE,SAAUqE,EAAE7B,GAAIvC,QAAQ,MAAMgC,YAAagC,EAAKxF,MAAMwD,oBAQjM,OACItD,EAAAC,EAAAC,cAAA,OAAKsC,UAAU,kBACXxC,EAAAC,EAAAC,cAAA,SAAOsC,UAAU,cACbxC,EAAAC,EAAAC,cAAA,aACMsF,YAhEEY,IAAMC,YC0CnBC,6MAxCXrC,MAAQ,CACJI,cAAe,MAGnBtE,YAAc,SAACqC,GACb,IAAMmE,EAAOnE,EAAEC,OAAOC,MAChBkE,EAAG,wCAAA1D,OAA2CyD,GAEpDE,IAAM,CACJC,OAAQ,MACRF,QACCG,KAAK,SAACC,GACP,IAAMC,EAAM,GACZD,EAASjG,KAAKmG,WAAWC,MAAMC,QAAQ,SAAC/F,GACtC4F,EAAIrD,KAAK,CACLK,GAAI5C,EAAKN,KAAK,GAAGoC,QACjBA,QAAS9B,EAAKN,KAAK,GAAGoC,QACtBZ,MAAOlB,EAAKN,KAAK,GAAGwB,MACpBS,YAAa3B,EAAKN,KAAK,GAAGiC,YAC1BvC,KAAMY,EAAKN,KAAK,GAAGsG,WACnBpE,QAASqE,IAAMjG,EAAKkG,MAAO,SAACzB,GAAQ,MAAiB,YAAVA,EAAE0B,MAAqBC,MAAQ,OAGhFjD,EAAKgB,SAAS,CACZf,cAAewC,MAEhBS,MAAM,SAACC,GACR,MAAO,8EAIX,OACEvH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsH,EAAD,CAAWzH,YAAawF,KAAKxF,cAC7BC,EAAAC,EAAAC,cAACuH,EAAD,CAAepD,cAAekB,KAAKtB,MAAMI,cAAe8B,SAAUZ,KAAKzF,MAAMqG,mBAnCzDC,IAAMC,WC4HnBqB,6MA1HbzD,MAAQ,CACNC,YAAa,IAAIC,MAAMC,EAAKtE,MAAMuE,eAAeC,MAAK,MAGxDqD,UAAY,SAAC1G,GACT,IAAMuF,EAAMvF,EAAK+B,KAEjByD,IAAM,CACFC,OAAQ,MACRF,QACCG,KAAK,SAACC,GAGH,IAFA,IAAIgB,EAAY,GACVC,EAASjB,EAASjG,KAAKmG,WAAWC,MAC/BrC,EAAI,EAAGA,EAAImD,EAAOhD,OAAQH,GAAK,EACpC,GAAImD,EAAOnD,GAAG2C,KAAKS,SAAS,SAAU,CAElCF,EAAYC,EAAOnD,GAAG2C,KACtB,MAGR3D,OAAOC,SAAS0D,KAAOO,IAC1BN,MAAM,iBAKf5G,KAAO,SAACC,GACNC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,OAG9CoH,WAAa,SAAClE,EAAIlD,GAChB,IAAIqH,EAAYlE,IAAWnD,EAAM,CAACkD,GAAOA,IACzClD,EAAKsH,OAAOD,EAAW,GACvB5D,EAAK1D,KAAKC,GACVyD,EAAK8D,iBAGP3E,SAAW,SAACM,EAAIlD,EAAMyB,GAClB,IAAI4F,EAAYlE,IAAWnD,EAAM,CAAEkD,GAAMA,IACzClD,EAAKqH,GAAWzE,UAAY5C,EAAKqH,GAAWzE,SAC5Ca,EAAK1D,KAAKC,GACVyD,EAAK8D,iBAGT3D,YAAc,SAAC5D,GAGX,IAFA,IAAI6D,EAAgB,GAChBC,EAAQ,EACHC,EAAI,EAAGA,EAAKC,KAAKC,MAAMjE,EAAKkE,OAAS,GAAMlE,EAAKkE,OAAS,EAAKH,GAAK,EAAG,CAG3E,IADA,IAAII,EAAW,GACNC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACtBpE,EAAK8D,KACPK,EAAStB,KAATwB,OAAAC,EAAA,EAAAD,CAAA,GACOrE,EAAK8D,KAEZA,GAAS,GAGbD,EAAchB,KAAKsB,GAEvB,OAAON,KAGXU,UAAY,SAACrB,GACT,IAAMsB,EAASf,EAAKH,MAAMC,YAC1BiB,EAAOtB,IAAM,EACbO,EAAKgB,SAAS,CACVlB,YAAaiB,OAIrBE,UAAY,SAACxB,GACT,IAAMsB,EAASf,EAAKH,MAAMC,YAC1BiB,EAAOtB,IAAM,EACbO,EAAKgB,SAAS,CACVlB,YAAaiB,6EAIZ,IAAAG,EAAAC,KACD4C,EAAQ5C,KAAKhB,YAAYgB,KAAKzF,MAAMa,MAClC6E,EAAU2C,EAAMtD,OAASsD,EAAM1C,IAAI,SAAAxE,GACrC,OACIjB,EAAAC,EAAAC,cAAA,UAEQe,EAAKwE,IAAI,SAAAC,GACL,OACI1F,EAAAC,EAAAC,cAAA,MAAIyF,IAAMD,EAAE7B,GAAKrB,UAAU,eACvBxC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAK0F,IAAI,YAAYC,IAAMH,EAAE7C,QAAUpC,MAAM,MAAMqF,OAAO,MAAM1C,QAAS,WAAOkC,EAAKqC,UAAUjC,OACpG1F,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,mBAAYwF,EAAEvD,SAEzBnC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAMsC,UAAU,eAAgBkD,EAAE9C,cACvC5C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAD,CAAQkD,QAAQ,UAAUC,QAAS,WAAOkC,EAAKJ,UAAUQ,EAAE7B,MAA3D,aACA7D,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAD,CAAQkD,QAAQ,UAAUC,QAAS,WAAOkC,EAAKyC,WAAWrC,EAAE7B,GAAIyB,EAAKxF,MAAMa,QAA3E,UACAX,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAD,CAAQkD,QAAQ,OAAO3C,MAAO,CAAC4H,SAAyB,IAAf1C,EAAEnC,SAAsB,eAAiB,QAASH,QAAS,WAAOkC,EAAK/B,SAASmC,EAAE7B,GAAIyB,EAAKxF,MAAMa,QAAQX,EAAAC,EAAAC,cAAA,QAAMsC,UAAU,cAAlK,UACAxC,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAD,CAAQkD,QAAQ,OAAO3C,MAAO,CAAC4H,SAAyB,IAAf1C,EAAEnC,SAAqB,eAAiB,QAASH,QAAS,WAAOkC,EAAK/B,SAASmC,EAAE7B,GAAIyB,EAAKxF,MAAMa,QAAQX,EAAAC,EAAAC,cAAA,QAAMsC,UAAU,cAAjK,WAEJxC,EAAAC,EAAAC,cAACgG,EAAD,CAAUjF,KAAMyE,EAAGxE,KAAMoE,EAAKxF,MAAMa,KAAMQ,KAAMmE,EAAKrB,MAAMC,YAAYwB,EAAE7B,IAAKzC,YAAakE,EAAKD,UAAWhE,SAAUqE,EAAE7B,GAAIvC,QAAQ,eAQ3JtB,EAAAC,EAAAC,cAAA,2GAIJ,OACIF,EAAAC,EAAAC,cAAA,OAAKsC,UAAU,kBACXxC,EAAAC,EAAAC,cAAA,SAAOsC,UAAU,cACbxC,EAAAC,EAAAC,cAAA,aACMsF,YAnHGY,IAAMC,WCA7BgC,EAAW,WACf,IACI,OAAOvH,KAAKwH,MAAM1H,aAAa2H,QAAQ,UAAY,GACrD,MAAOnG,IACT,MAAO,IAoEMoG,cAhEb,SAAAA,EAAY1I,GAAO,IAAAsE,EAAA,OAAAY,OAAAyD,EAAA,EAAAzD,CAAAO,KAAAiD,IACjBpE,EAAAY,OAAA0D,EAAA,EAAA1D,CAAAO,KAAAP,OAAA2D,EAAA,EAAA3D,CAAAwD,GAAAI,KAAArD,KAAMzF,KASRwD,YAAc,WACZc,EAAKgB,SAAS,CACZyD,eAAgBzE,EAAKH,MAAM4E,iBAZZzE,EA6BnB0E,kBAAoB,WAClB,OAAI1E,EAAKH,MAAM4E,cAEX7I,EAAAC,EAAAC,cAAC6I,EAAD,CAAiB5C,SAAU/B,EAAKH,MAAM8C,QAItC/G,EAAAC,EAAAC,cAAC8I,EAAD,CAAgBrI,KAAMyD,EAAKH,MAAM8C,SAjCrC3C,EAAKH,MAAQ,CACX4E,eAAe,EACfI,QAAS,GACTlC,MAAOsB,KANQjE,wEAyCjB,OACEpE,EAAAC,EAAAC,cAAA,OAAKsC,UAAU,OACbxC,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,KACElJ,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,KACEnJ,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,KACEpJ,EAAAC,EAAAC,cAAA,MAAIM,MAAO,CAAC6I,UAAW,SAAvB,oBAEFrJ,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,KACEpJ,EAAAC,EAAAC,cAAA,OAAKsC,UAAU,cACbxC,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAUmC,KAAKjC,aAAzC,wBAINtD,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAK3G,UAAU,kBAEX+C,KAAKuD,8BAzDDzC,aCJEiD,QACW,cAA7B5F,OAAOC,SAAS4F,UAEe,UAA7B7F,OAAOC,SAAS4F,UAEhB7F,OAAOC,SAAS4F,SAASC,MACvB,2DCXNC,IAASC,OAAO1J,EAAAC,EAAAC,cAACyJ,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrD,KAAK,SAAAsD,GACjCA,EAAaC","file":"static/js/main.90ca2ec7.chunk.js","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst SearchBar = (props) => {\r\n    const { searchMedia } = props;\r\n    return (\r\n      <div>\r\n        <Form>\r\n         <Form.Control type=\"text\" placeholder=\"Type in your keyword...\" onChange={searchMedia} style={{width : \"100%\"}}/>\r\n        </Form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport _findIndex from 'lodash/findIndex';\r\n\r\n// import axios from 'axios';\r\n\r\nfunction save(data) {\r\n    localStorage.setItem(\"nasa\", JSON.stringify(data));\r\n}\r\n\r\nfunction addData(item, data, linkId, changeState) {\r\n    item.link = `https://images-api.nasa.gov/asset/${linkId}`\r\n    item.favorite = false;\r\n    data.push(item);\r\n    save(data);\r\n}\r\n\r\nfunction editData(id, item, data) {\r\n    let dataIndex = _findIndex(data, {\"id\" : id});\r\n    data[dataIndex] = item;\r\n    save(data);\r\n}\r\n\r\nconst AddModal = (props) => {\r\n    const { item, list, open, handleClose, toggleNo, purpose } = props;\r\n\r\n    if (purpose === \"add\") {\r\n        return (\r\n            <Modal show={open} onHide={() => {handleClose(toggleNo)}}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Add New Item</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"itemTitle\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter title...\" defaultValue={item.title}  onChange={(e) => { item.title = e.target.value }}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        Your media title. Make it short and informative.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"itemDesc\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"3\" style={{resize: \"none\"}} placeholder=\"Enter description...\" defaultValue={item.description}  onChange={(e) => { item.description = e.target.value }}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        Your media description.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"itemPreviewLink\">\r\n                        <Form.Label>Media Preview Link</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter link...\" defaultValue={item.preview}  onChange={(e) => { item.preview = e.target.value }} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"itemMediaLink\">\r\n                        <Form.Label>Media Link</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter link...\" defaultValue={`https://images-api.nasa.gov/asset/${item.nasa_id}`}  onChange={(e) => { item.link = e.target.value }}/>\r\n                    </Form.Group>\r\n                </Form>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => {handleClose(toggleNo)}}>\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => {addData(item, list, item.nasa_id); handleClose(toggleNo); window.location.reload(); }}>\r\n                  Add This Item\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    } else {\r\n        return (\r\n            <Modal show={open} onHide={() => {handleClose(toggleNo)}}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Edit Item</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"itemTitle\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter title...\" defaultValue={item.title}  onChange={(e) => { item.title = e.target.value }}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        Your media title. Make it short and informative.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"itemDesc\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"3\" style={{resize: \"none\"}} placeholder=\"Enter description...\" defaultValue={item.description} onChange={(e) => { item.description = e.target.value }}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        Your media description.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"itemPreviewLink\">\r\n                        <Form.Label>Media Preview Link</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter link...\" defaultValue={item.preview} onChange={(e) => { item.preview = e.target.value }} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"itemMediaLink\">\r\n                        <Form.Label>Media Link</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter link...\" defaultValue={item.link} onChange={(e) => { item.link = e.target.value }}/>\r\n                    </Form.Group>\r\n                </Form>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => {handleClose(toggleNo)}}>\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => {editData(item.id, item, list); handleClose(toggleNo)}}>\r\n                    Save Item\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","import React from 'react';\r\n// import imgStyle from '../style/images.scss';\r\nimport AddModal from './AddModal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport '../style/itemTable.scss';\r\n\r\nclass SearchResults extends React.Component {\r\n    state = {\r\n        toggleModal: new Array(this.props.searchResults).fill(false),\r\n    }\r\n\r\n    createTable = (data) => {\r\n        let arrangedTable = [];\r\n        let count = 0;\r\n        for (let i = 0; i < (Math.round(data.length / 2) + (data.length % 2)); i += 1) {\r\n            // const uniqueId = i;\r\n            let tableRow = [];\r\n            for (let j = 0; j < 2; j += 1) {\r\n                if(data[count]) {\r\n                    tableRow.push({\r\n                        ...data[count],\r\n                    })\r\n                    count += 1;\r\n                }\r\n            }\r\n            arrangedTable.push(tableRow)\r\n        }\r\n        return arrangedTable;\r\n    }\r\n\r\n    showModal = (id) => {\r\n        const modArr = this.state.toggleModal;\r\n        modArr[id] = true;\r\n        this.setState({\r\n            toggleModal: modArr,\r\n        })\r\n    }\r\n\r\n    hideModal = (id) => {\r\n        const modArr = this.state.toggleModal;\r\n        modArr[id] = false;\r\n        this.setState({\r\n            toggleModal: modArr,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const resList = this.createTable(this.props.searchResults).map(item => {\r\n            return (\r\n                <tr>\r\n                    {\r\n                        item.map(o => {\r\n                            return (\r\n                                <td key={ o.id } className=\"table-cells\">\r\n                                    <div><img alt=\"nasa-item\" src={ o.preview } width=\"300\" height=\"300\"></img></div>\r\n                                    <div><span><b>Title: { o.title }</b></span></div>\r\n                                    <div><textarea rows=\"5\" cols=\"50\" value={ o.description } disabled></textarea></div>\r\n                                    <div><Button variant=\"primary\" onClick={() => {this.showModal(o.id)}}>Add New Item</Button></div>\r\n                                    <AddModal item={o} list={this.props.itemList} open={this.state.toggleModal[o.id]} handleClose={this.hideModal} toggleNo={o.id} purpose=\"add\" changeState={this.props.changeState}></AddModal>\r\n                                </td>\r\n                            )\r\n                        })\r\n                    }\r\n                </tr>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"item-container\">\r\n                <table className=\"item-table\">\r\n                    <tbody>\r\n                        { resList }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchResults;","import React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport _find from 'lodash/find';\r\n\r\nimport SearchBar from './SearchBar';\r\nimport SearchResults from './SearchResults';\r\n\r\nclass SearchComponent extends React.Component {\r\n    state = {\r\n        searchResults: [],\r\n    }\r\n\r\n    searchMedia = (e) => {\r\n      const term = e.target.value;\r\n      const url = `https://images-api.nasa.gov/search?q=${term}`;\r\n  \r\n      axios({\r\n        method: 'GET',\r\n        url,\r\n      }).then((response) => {\r\n        const res = [];\r\n        response.data.collection.items.forEach((item) => {\r\n          res.push({\r\n              id: item.data[0].nasa_id,\r\n              nasa_id: item.data[0].nasa_id,\r\n              title: item.data[0].title,\r\n              description: item.data[0].description,\r\n              type: item.data[0].media_type,\r\n              preview: _find(item.links, (o) => { return o.rel === \"preview\" }).href || [],\r\n          })\r\n        })\r\n        this.setState({\r\n          searchResults: res,\r\n        })\r\n      }).catch((error) => {\r\n        return \"\";\r\n      });\r\n    }\r\n    render() {\r\n    return (\r\n      <div>\r\n          <SearchBar searchMedia={this.searchMedia}></SearchBar>\r\n          <SearchResults searchResults={this.state.searchResults} itemList={this.props.itemList}></SearchResults>\r\n      </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default SearchComponent;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport AddModal from './AddModal';\r\n\r\nimport _findIndex from 'lodash/findIndex';\r\n\r\nimport '../style/itemTable.scss';\r\n\r\nclass VideoComponent extends React.Component {\r\n    state = {\r\n      toggleModal: new Array(this.props.searchResults).fill(false),\r\n    }\r\n\r\n    goToMedia = (item) => {\r\n        const url = item.link;\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url,\r\n          }).then((response) => {\r\n                let mediaLink = \"\";\r\n                const resArr = response.data.collection.items;\r\n                for (let i = 0; i < resArr.length; i += 1) {\r\n                    if (resArr[i].href.includes(\"~orig\")) {\r\n                        // console.log(resArr[i].href);\r\n                        mediaLink = resArr[i].href;\r\n                        break;\r\n                    }\r\n                }\r\n                window.location.href = mediaLink;\r\n          }).catch(() => {\r\n            return;\r\n          });\r\n    }\r\n\r\n    save = (data) => {\r\n      localStorage.setItem(\"nasa\", JSON.stringify(data));\r\n    }\r\n\r\n    deleteData = (id, data) => {\r\n      let dataIndex = _findIndex(data, {\"id\" : id});\r\n      data.splice(dataIndex, 1);\r\n      this.save(data);\r\n      this.forceUpdate();\r\n    }\r\n\r\n    favorite = (id, data, e) => {\r\n        let dataIndex = _findIndex(data, { \"id\": id });\r\n        data[dataIndex].favorite = !data[dataIndex].favorite;\r\n        this.save(data);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    createTable = (data) => {\r\n        let arrangedTable = [];\r\n        let count = 0;\r\n        for (let i = 0; i < (Math.round(data.length / 3) + (data.length % 3)); i += 1) {\r\n            // const uniqueId = i;\r\n            let tableRow = [];\r\n            for (let j = 0; j < 3; j += 1) {\r\n              if (data[count]) {\r\n                tableRow.push({\r\n                    ...data[count],\r\n                })\r\n                count += 1;\r\n              }\r\n            }\r\n            arrangedTable.push(tableRow)\r\n        }\r\n        return arrangedTable;\r\n    }\r\n\r\n    showModal = (id) => {\r\n        const modArr = this.state.toggleModal;\r\n        modArr[id] = true;\r\n        this.setState({\r\n            toggleModal: modArr,\r\n        })\r\n    }\r\n\r\n    hideModal = (id) => {\r\n        const modArr = this.state.toggleModal;\r\n        modArr[id] = false;\r\n        this.setState({\r\n            toggleModal: modArr,\r\n        })\r\n    }\r\n\r\n    render() {\r\n      const table = this.createTable(this.props.data);\r\n        const resList = table.length ? table.map(item => {\r\n            return (\r\n                <tr>\r\n                    {\r\n                        item.map(o => {\r\n                            return (\r\n                                <td key={ o.id } className=\"table-cells\">\r\n                                    <div><img alt=\"nasa-item\" src={ o.preview } width=\"300\" height=\"300\" onClick={() => {this.goToMedia(o);}}></img></div>\r\n                                    <div><span><b>Title: { o.title }</b></span></div>\r\n                                    {/* <div><textarea rows=\"5\" cols=\"50\" value={ o.description } disabled></textarea></div> */}\r\n                                    <div><span className=\"description\">{ o.description }</span></div>\r\n                                    <div>\r\n                                        <Button variant=\"primary\" onClick={() => {this.showModal(o.id)}}>Edit Item</Button>\r\n                                        <Button variant=\"primary\" onClick={() => {this.deleteData(o.id, this.props.data)}}>Delete</Button>\r\n                                        <Button variant=\"info\" style={{display: (o.favorite === false) ? \"inline-block\" : \"none\"}} onClick={() => {this.favorite(o.id, this.props.data)}}><span className=\"glyphicon\"></span>♡</Button>\r\n                                        <Button variant=\"info\" style={{display: (o.favorite === true) ? \"inline-block\" : \"none\"}} onClick={() => {this.favorite(o.id, this.props.data)}}><span className=\"glyphicon\"></span>♥</Button>\r\n                                    </div>\r\n                                    <AddModal item={o} list={this.props.data} open={this.state.toggleModal[o.id]} handleClose={this.hideModal} toggleNo={o.id} purpose=\"edit\"></AddModal>\r\n                                </td>\r\n                            )\r\n                        })\r\n                    }\r\n                </tr>\r\n            )\r\n        }) : (\r\n            <div>\r\n                There is currently no items in the collection. Head to the Search Bar and start adding some!\r\n            </div>\r\n        )\r\n        return (\r\n            <div className=\"item-container\">\r\n                <table className=\"item-table\">\r\n                    <tbody>\r\n                        { resList }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n\r\n  export default VideoComponent;","import React, { Component } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport SearchComponent from './components/SearchComponent';\nimport VideoComponent from './components/VideoComponent';\n\nimport './style/itemTable.scss';\n\n\nconst getItems = () => {\n  try {\n      return JSON.parse(localStorage.getItem(\"nasa\")) || [];\n  } catch (e) {}\n  return [];\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAddScreen: false,\n      keyword: '',\n      items: getItems(),\n    }\n  }\n\n  changeState = () => {\n    this.setState({\n      showAddScreen: !this.state.showAddScreen, \n    })\n  }\n\n  // searchMedia = (term) => {\n  //   const url = `https://images-api.nasa.gov/search?q=${term}`;\n\n  //   axios({\n  //     method: 'GET',\n  //     url,\n  //   }).then((response) => {\n  //     console.log(response);\n  //   }).catch((error) => {\n  //     console.log(error);\n  //   });\n  // }\n\n  showHideAddScreen = () => {\n    if (this.state.showAddScreen) {\n      return (\n        <SearchComponent itemList={this.state.items}></SearchComponent>\n      )\n    } else {\n      return (\n        <VideoComponent data={this.state.items}></VideoComponent>\n      )\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <Col>\n              <h1 style={{textAlign: \"left\"}}>NASA Collection</h1>\n            </Col>\n            <Col>\n              <div className=\"text-right\">\n                <Button variant=\"primary\" onClick={ this.changeState }>Toggle Search Bar</Button>\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"main-container\">\n            {/* <input type=\"button\" value=\"test API\" onClick={() => { this.searchMedia(\"moon\") } } /> */}\n            { this.showHideAddScreen() }\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}